$(document).ready(function() {

    window.Notification = Backbone.Model.extend({
        save: function() {
            throw new Error("A notification object cannot be persisted.  Save Not Supported");
        },
        addPromptAction: function(label, action) {
            prompts.add({label: label, action: action});
        },
        hasPrompts: function() {
            return this.prompts.length > 0;
        },
        prompts: []
    });

    window.Notifications = Backbone.Collection.extend({
        model: Notification,
        fetch: function() {
            throw new Error("not supported");
        },
        addNotificationsFromModel: function(model) {
            function evaluateModel(model) {
                if (model.get("errors")) {
                    _.each( model.get("errors"), function( errorObject ) {
                        var notification = new Notification({ message: errorObject, type: "error", model: this.model });
                        this.add(notification);
                    }, this);
                }
            }

            evaluateModel = _.bind(evaluateModel, this);

            if (!model.models) {
                evaluateModel(model);
            }
            else {
                _.each(model.models, function(m) {
                    evaluateModel(m);
                });
            }
        },
        comparator: function(notification) {
            return notification.get("type");
        }
    });

    window.notifications = new Notifications;


    window.NotificationCenter = Backbone.View.extend({
        events: {
            "click .toggle":"toggle"
        },
        initialize: function() {
            $(this.el).addClass("notification-center");
            $(this.el).addClass("notification-center-hidden");

            $(this.el).html('<div class="notification-center-count"></div><div class="notification-center-message"><div class="notification-center-toggle"><img class="toggle" src="/images/arrow_closed.png" alt="Open"/><img class="toggle" src="images/icon_exit.png" alt="Close"/></div><ul/></div>');

            _.bindAll(this, 'render', 'add');
            notifications.bind("add", this.add);
            notifications.bind("refresh", this.render);
            notifications.bind("all", this.render);
        },
        render: function() {
            $(this.el.selector + ' .notification-center-message ul').empty();

            _.each(notifications.models, function(notification) {
                this.add(notification);
            }, this);

            return this;
        },
        add: function(notification) {
            //  Evaluate the notification type to determine what css class to append to the notification.
            var notificationType = notification.get("type");
            var notificationClass = "notification-center-message-error";

            switch (notificationType) {
                case "error":
                    notificationClass = "notification-center-message-error";
                    break;
                case "warning":
                    notificationClass = "notification-center-message-warning";
                    break;
                case "success":
                    notificationClass = "notification-center-message-success";
                    break;
            }

            $(this.el.selector + ' .notification-center-message ul').append('<li class="' + notificationClass + '">' + notification.get("message") + '</li>');

            if (notifications.length > 0) {
                $(this.el.selector + ' .notification-center-count').html(notifications.length);
                $(this.el).removeClass("notification-center-hidden");
            }
            else {
                $(this.el).addClass("notification-center-hidden");
            }

            return this;
        },
        toggle: function() {
            console.log('toggling');
        }
    });

    window.notificationCenter = new NotificationCenter({el: $("#notification-center") });
});